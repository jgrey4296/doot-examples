# -*- mode:toml; -*-
[startup]
doot_version         = "1.1"
loaders              = { commands="default", task="default", parser="default" }
sources              = { tasks=[".tasks"], code=[] }
skip_default_plugins = false
skip_plugin_search   = false

[startup.plugins]
# Allows for defining aliases
command        = { tasks="doot.cmds.list_cmd:ListCmd"}

[shutdown]
notify           = { speak=false } # success_msg="", fail_msg=""
defaulted_values = { write=false, path=".defaulted_values.toml" }

[settings.commands]
[settings.commands.run]
tracker     = "default"
runner      = "default"
reporter    = "default"
report-line = []

[settings.commands.list]
hide = []
aliases = { tasks=[] }

[logging]
file = false
[logging.stream]
level = "user"
filter = []
target = "stdout"
format="{levelname:<8} : {message}"

[logging.printer]
level        = "INFO"
colour       = true
target       = ["stdout"]
format       = "{message}"
filename_fmt = "doot_printed.log"

[[tasks.inject]]
name         = "top"
blah         = "from spec injection"
bloo         = "{aweg}"
aweg         = "{blee}"
blee         = "Full Immediate Expansion"
depends_on   = [
    {task="inject::_.target"},
    # # # Direct: map blah -> expanded(blah)
    {task="inject::_.target", inject={from_spec=["blah"], suffix="direct.now"}},
    # # # With indirection: map blah -> expanded(bloo_)
    {task="inject::_.target", inject={from_spec={blah="{bloo}"}, suffix="indirect.now"}},
    # # Delayed indirection: map blah -> l1(bloo_) -> aweg
    {task="inject::_.target", inject={from_target={blah="{bloo}"}, suffix="direct.delayed"}},
    # Insert example
    {task="inject::_.target", inject={literal={blah="a direct insertion"}, suffix="insertion"}},
]

[[tasks.inject]]
name        = "_.target"
doc         = [
"When run on its own, will message 'default blah'.",
"When run from inject::top, will message 'hydrants'",
]
blah            = "Default Blah"
aweg            = "Late Expansion Aweg"
info            = "A default info message"
actions         = [
    # {do="log", msg="{info}"},
    {do="log", msg="The Value of blah is: {blah}"}
]
