# -*- mode:toml; -*-

[startup]
doot_version          = "1.1"
loaders               = { commands="default", task="default", parser="default" }
sources               = { tasks=[".tasks"], code=[] }
skip_default_plugins  = false
skip_plugin_search    = false
empty_cmd             = ["run", "example::+.expansion"]

[startup.plugins]
# Allows for defining aliases
command        = { tasks="doot.cmds.list_cmd:ListCmd"}

[shutdown]
notify           = { speak=false } # success_msg="", fail_msg=""
defaulted_values = { write=false, path=".defaulted_values.toml" }

[settings.commands]

[settings.commands.run]
tracker     = "default"
runner      = "default"
reporter    = "default"
report-line = []

[settings.commands.list]
hide     = []
aliases  = { tasks=[] }

[logging]
file = false

[logging.stream]
level   = "user"
filter  = []
target  = "stdout"
format  ="{levelname:<8}  : {message}"

[logging.printer]
level        = "WARNING"
colour       = true
target       = ["stdout"]
format       = "{message}"
filename_fmt = "doot_printed.log"

[logging.extra]

[[locations]]

[[tasks.example]]
name  = "+.expansion"
doc   = ["A job with an expansion action",
"Creates a new subtask for each value in 'data'",
"Set count > -1 to limit the number of subtasks",
]
data         = ["a" ,"b", "c", "d"]
inject_vals  = {literal=["blah"]}
template     = "example::_.simple"
count        = 2
actions      = [
    {do="log", msg="Entering Job. There are 4 data values, but only 2 subtasks will be generated."},
    # Expand the {template} using the injection {inject_vals}, applying literal values {data}
    {do="dootle.jobs.expansion:JobExpandAction", from_="data", update_="subtasks", inject_="inject_vals", template_="template"},
    {do="dootle.jobs.limit:JobLimitAction", from_="subtasks"},
    {do="dootle.jobs.queue:JobQueueAction",  from_="subtasks"},
    {do="log", msg="Subtasks Queued"},
    {do="log", msg="--------------------------"},
]

[[tasks.example]]
name     = "_.simple"
blah     = "hello"
actions  = [
    {do="log", msg="SubTask. {_task_name}"},
    {do="log", msg="Expansion value: blah = {blah}"},
    {do="log", msg="--------------------------"},
]
