# -*- mode:toml; -*-
# this demonstrates file dependencies.
# 1: file.dep::top depends on file.dep::_.yes,
# 2: file.dep::_.yes depends on a file.
# 3: task file.dep::_.make.file is triggered,
# 4: file.dep::_.yes can now run
# 5: file.dep::top can now run

[startup]
doot_version  = "1.1"
loaders       = { commands="default", task="default", parser="default" }
sources       = { tasks=["."], code=[] }
empty_cmd     = ["run", "file.dep::top"]

[settings.commands]

[settings.commands.run]
tracker      = "default"
runner       = "default"
reporter     = "default"
show         = false
report-line  = []

[logging]
# Standard loggers. See LoggerSpec.
stream  = { level="WARNING", filter=[],  target="stdout",   format="{levelname:<8} : {message}"  }
file    = true
printer = { level="WARNING", colour=true, target=["stdout"], format="{message}", filename_fmt="doot_printed.log" }

[[locations]]
target = "file::>./is-there.txt"

[tasks]

[[tasks."file.dep"]]
name        = "top"
doc         = ["An example of file dependencies"]
depends-on  = ["file.dep::_.yes"]
actions = [
    {do="log", msg="--------------------------"},
    {do="log", msg="Task: {_task_name}"},
]
cleanup = [
    {do="log", msg="--------------------------"},
    {do="log", msg="Task: {_task_name}"},
    {do="log", msg="Cleaning up File"},
    {do="delete!", args=["{target!p}"]},
]

[[tasks."file.dep"]]
disabled             = false
name                 = "_.no"
doc                  = ["This shouldn't run, because the file doesn't exist"]
depends-on           = ["file::>./not-there.txt"]
actions = [
    {do="log", msg="--------------------------"},
    {do="log", msg="Task: {_task_name}"},
    {do="log", msg="This should not be printed, because ./not-there.txt should not exist"},
]

[[tasks."file.dep"]]
name                 = "_.yes"
doc                  = ["this should run"]
depends-on           = ["file::>./is-there.txt"]
actions              = [
    {do="log", msg="--------------------------"},
    {do="log", msg="Task: {_task_name}"},
    {do="log", msg="File Exists"}
]

[[tasks."file.dep"]]
name                  = "_.make.file"
doc                   = ["this will create file.deps.op's file dependency"]
val                   = "some simple data"
actions               = [
    {do="log", msg="--------------------------"},
    {do="log", msg="Task: {_task_name}"},
    {do="log", msg="Making File"},
    {do="write!", from_="val", to="./is-there.txt"}
]
required-for          = ["file::>./is-there.txt"]
